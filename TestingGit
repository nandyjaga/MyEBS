//app.js

var EBSControllers = angular.module('EBSControllers', []);
var appEBS = angular.module('EBS', [ 'ngRoute','EBSControllers','ui.grid']);
appEBS.
  config(['$routeProvider', function($routeProvider) {
  $routeProvider.
	  when('/login', {templateUrl: 'partial/common/Login.html', controller: 'LoginCtrl'}).
	  when('/dashboard', {templateUrl: 'partial/common/DashBoard.html', controller: 'DashBoardCtrl'}).
	  when('/user', {templateUrl: 'partial/User.html', controller: 'UserCtrl'}).
      otherwise({redirectTo: '/login'});
}]);

appEBS.factory('EbsSecurity', ['$http','$rootScope', function($http,$rootScope) {
	var data={
		loggedin : false
	};
	
	
	function handleSuccess( response ) {
        return( response.data );
    }
	
	function handleError( response ) {}
	
	function checkLoginStatus( name ) {
      var request=$http.get('/isLoggedIn').
			success(function(data, status, headers, config) {
				$rootScope.$broadcast('EVT_LOGIN_STATUS',data);
			}).
			error(function(data, status, headers, config) {});
		return( request.then( handleSuccess, handleError ) );
	}
	return({
			checkLoginStatus: checkLoginStatus
	});
	
 }]);
 
 
 
 //index.html
 
 <!DOCTYPE HTML>
<html class="ng-scope" lang="en" ng-app="EBS" >
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
	<title>EBS -- Extended Business Solutions</title>
	<link href="lib/bootstrap/css/bootstrap.css" rel="stylesheet">
	<link href="lib/bootstrap/css/bootstrap-theme.css" rel="stylesheet">
	<link href="css/fontawesome/css/font-awesome.min.css" rel="stylesheet">

	<link href="css/common.css" rel="stylesheet">
	<link href="css/SideMenuBar.css" rel="stylesheet">
	<link href="css/login.css" rel="stylesheet">
	<link href="lib/angularjs/ngGrid/ui-grid-unstable.css" rel="stylesheet">
	
	
	<script src="lib/jquery-1.9.1.js"></script>
	<script src="lib/jquery-ui.js"></script>
	<script src="js/validation.js"></script>
	
	<script src="lib/bootstrap/js/bootstrap.js"></script>
	<script src="lib/angularjs/angular.js" ></script>
	<script src="lib/angularjs/angular-route.js" ></script>
	<script src="lib/angularjs/angular-animate.js" ></script>
	<script src="lib/angularjs/angular-sanitize.js" ></script>
	<script src="lib/angularjs/ngGrid/ui-grid-unstable.js" ></script>
	
	<script src="lib/Bacon.js" ></script>
	
	<script src="app.js" ></script>	
	<script src="controller/DashBoardCtrl.js" ></script>
	<script src="controller/LoginCtrl.js" ></script>
	<script src="controller/LeftMenuCtrl.js" ></script>
	<script src="controller/UserCtrl.js" ></script>
	
	
</head>
	<body>
		<div class="row" style="height:100%" >
			<div class="col-lg-2 col-md-3 col-sm-12 col-xs-12"  >
				<div ng-controller="LeftMenuCtrl" class="nav-side-menu" id="leftPanel" ng-include="'partial/common/LeftMenu.html'" ng-show="data.showMenu" ></div>
			</div>
			<div class="col-lg-10 col-md-9 col-sm-12 col-xs-12" id="divMainView"  >
				<div ng-view   ></div>
			</div>
		</div>
	</body>
</html>


//sessionRouter.js

'use strict';
module.exports=function(server,mongoose) {
	
	/**Router to to check the session status **/
	server.get('/isLoggedIn', function(req, res){
		var loginStatus=null;
		if(req.session.uuid==undefined || req.session.uuid==null){
			loginStatus= {"loginStatus":false};
		}else{
			loginStatus= {"loginStatus":true};
		}
		res.send(loginStatus);
	});
	/**Router to to check the session status **/
}

// UserRouter.js

'use strict';
module.exports=function(server,mongoose,requestErrorHandler) {
    /**Router to handle the Login Page **/
	var userSchema = new mongoose.Schema({userName: String,userId:String,email:String, password: String},{collection:"ebsUsers"});
    var ebsUsers = mongoose.model("ebsUsers",userSchema);
	
	server.post('/getVal', function(req, res){
	   ebsUsers.findOne({userId:req.body.userId,password:req.body.password}, function (err, userD) {
			if (err) {
				requestErrorHandler(req,res," while Login action")
			}else{
				if(userD==null){
					req.session.uuid=null;
					res.send({"loginSuccess":false});
				}else{
					req.session.uuid=req.body.userId;
					res.send({"loginSuccess":true});
				}
			}
		});
	});
	/**Router to handle the Login Page **/
	
	/**Router to handle the Create User  **/
	server.post('/createUser', function(req, res){
		var resData={
			loginStatus:false,
			actionData:null,
			actionStatus:false
		};
		
		if(req.session.uuid==undefined || req.session.uuid==null){
			resData.loginStatus=false;
			res.send(resData);
		}else{
			resData.loginStatus=true;
			var newUser = new ebsUsers(req.body);
			ebsUsers.create(newUser,function(err,createdUser){
				if (err){
					requestErrorHandler(req,res," while creating user");
				}else{
					resData.actionData=createdUser;
					resData.actionStatus=true;
					res.send(resData);
				} 
			});
		}
	});
	/**Router to handle the Create User  **/
}


//LoginCtrl.js
EBSControllers.controller('LoginCtrl', ['$scope','$http','$routeParams','EbsSecurity', 
    function ($scope,$http,$routeParams,EbsSecurity) {
		 $scope.data={
			userId:"",
			password:""
		};
		
		$scope.init=function(){
			$('body').addClass("cls_login_body");
			$("#divMainView").attr("class","").addClass("col-lg-12 col-md-12 col-sm-12 col-xs-12");
			$("#MainLoginPage").show();
			EbsSecurity.checkLoginStatus().then(
				function(data){
					if(data.loginStatus){
						$("#divMainView").attr("class","").addClass("col-lg-10 col-md-9 col-sm-12 col-xs-12");
						window.location.hash="/dashboard";
					}else{
						$("#MainLoginPage").show();
					}
				}
			)
		}
		
		$scope.appLogin=function(){
		  var errorMsg = "";
		  if($scope.data.userId==""){
			 errorMsg="Please enter user name";
		  }
		  if($scope.data.password==""){
			 if(errorMsg==""){
				errorMsg="Please enter password";
			 }else{
				errorMsg=errorMsg+" & password"
			 }
		  }
		  if(errorMsg!=""){
			$("#output").removeClass(' alert alert-success');
			$("#output").addClass("alert alert-danger animated fadeInUp").html(errorMsg+".");
		  }else{
			$http.post('/getVal',$scope.data).
			success(function(data, status, headers, config) {
				$("#divMainView").attr("class","").addClass("col-lg-10 col-md-9 col-sm-12 col-xs-12");
				window.location.hash="/dashboard";
			}).
			error(function(data, status, headers, config) {});
		  }
		}
		$scope.init();//Initialise
    }
]);


//Login.html
<div class="container" id="MainLoginPage" >
	<div class="login-container" >
		<div id="output"></div>
		<div class="avatar"></div>
		<div class="form-box">
			<form action="" method="">
				<input type="text" placeholder="User Name" ng-model="data.userId" id="txt_uname" >
				<input type="password" placeholder="Password" ng-model="data.password" id="txt_pwd" >
				<button class="btn btn-info btn-block login" type="button" ng-click="appLogin()"  >Login</button>
			</form>
		</div>
	</div>
</div>


//UserCtrl.js
EBSControllers.controller('UserCtrl', ['$scope','$http','$routeParams','EbsSecurity', 
    function ($scope,$http,$routeParams,EbsSecurity) {
      	$scope.data={
			createdUsers:[
				{
					"userName": "Cox",
					"userId": "Carney",
					"email": "Enormo"
				},
				{
					"userName": "Lorraine",
					"userId": "Wise",
					"email": "Comveyer"
				},
				{
					"userName": "Nancy",
					"userId": "Waters",
					"email": "Fuelton"
				}
			]
		};
		
		 
		
		$scope.userModel={ 
							userName: "",
						    userId:"",
						    email:"", 
						    password: ""
						 };
		$scope.init=function(){
			$('body').removeClass("cls_login_body");
			$("#divMainView").addClass("cls-container-logged-in");
			EbsSecurity.checkLoginStatus().then(
				function(data){
					if(data.loginStatus){
					}else{
						window.location.hash="/login";
					}
				}
			)
		}
		$scope.init();//Initialise
		$scope.reSetUserModel=function(){
			for(key in $scope.userModel){
				$scope.userModel[key]="";
			}
			$('.input-group input[required], .input-group textarea[required], .input-group select[required]').val("").trigger("change");
		}
		
		$scope.addUpdateUser=function(){
			$http.post('/createUser',$scope.userModel).
			success(function(data, status, headers, config) {
				$scope.data.createdUsers.push(data.actionData)
				//window.location.hash="/dashboard";
				$scope.reSetUserModel();
			}).
			error(function(data, status, headers, config) {});
			
			
		};
		
	}
]);

//User.html

<div class="container-fluid">
	<div class="row">
        <div class="col-sm-10 col-md-10 col-xs-10 col-lg-10 col-sm-offset-1 col-md-offset-1 col-xs-offset-1 col-lg-offset-1 " >
            <legend>User Form</legend>
        </div>
        <!-- panel preview -->
        <div class="col-sm-10 col-md-10 col-xs-10 col-lg-10 col-sm-offset-1 col-md-offset-1 col-xs-offset-1 col-lg-offset-1 " >
            <h4>Add User</h4>
            <div class="panel panel-default">
                <form class="panel-body">
					<div class="row" >
						<div class="col-sm-10 col-xs-10 col-md-5  col-lg-5 col-sm-offset-1 col-xs-offset-1 col-md-offset-1  col-lg-offset-1 " >
							<div class="form-group">
								<label for="user-name">User Name</label>
								<div class="input-group">
									<input type="text" class="form-control" name="user-name" id="user-name" placeholder="User Name" ng-model="userModel.userName" required>
									<span class="input-group-addon danger"><span class="glyphicon glyphicon-remove"></span></span>
								</div>
							</div>
						</div>
						<div class="col-sm-10 col-xs-10 col-md-5  col-lg-5 col-sm-offset-1 col-xs-offset-1 col-md-offset-1  col-lg-offset-1 " >
							<div class="form-group">
								<label for="user-id">User ID</label>
								<div class="input-group">
									<input type="text" class="form-control" name="user-id" id="user-id" placeholder="User ID" ng-model="userModel.userId"  required>
									<span class="input-group-addon danger"><span class="glyphicon glyphicon-remove"></span></span>
								</div>
							</div>
						</div>
					</div>
					<div class="row" >
						<div class="col-sm-10 col-xs-10 col-md-5  col-lg-5 col-sm-offset-1 col-xs-offset-1 col-md-offset-1  col-lg-offset-1 " >
							<div class="form-group">
								<label for="user-id">Email</label>
								<div class="input-group" data-validate="email">
									<input type="text" class="form-control" name="email-id" id="email-id" placeholder="Email ID" ng-model="userModel.email"  required>
									<span class="input-group-addon danger"><span class="glyphicon glyphicon-remove"></span></span>
								</div>
							</div>
						</div>
					</div>
					<div class="row" >
						<div class="col-sm-3 col-xs-4 col-md-2  col-lg-2 col-sm-offset-9 col-xs-offset-8 col-md-offset-10  col-lg-offset-10" >
							<div class="form-group">
								<button type="button" data-type="submit" class="btn btn-default preview-add-button" ng-click="addUpdateUser()" disabled>
									<span class="glyphicon glyphicon-plus"    ></span> Add
								</button>
							</div>
						</div>
					</div>
                </form>
            </div>            
        </div> <!-- / panel preview -->
        <div class="col-sm-7"  >
            <div id="grid1" ui-grid="{ data: data.createdUsers }" ></div>
        </div>
	</div>
</div>


<!--h1>Validation example</h1>
<div class="container">
	<div class="row">
		<h2>Input Validation + Colorful Input Groups</h2>
	</div>
    
    <div class="row">
        <div class="col-sm-offset-4 col-sm-4">
            <form method="post">
				<div class="form-group">
        			<label for="validate-text">Validate Text</label>
					<div class="input-group">
						<input type="text" class="form-control" name="validate-text" id="validate-text" placeholder="Validate Text" required>
						<span class="input-group-addon danger"><span class="glyphicon glyphicon-remove"></span></span>
					</div>
				</div>
				<div class="form-group">
        			<label for="validate-optional">Optional</label>
					<div class="input-group">
						<input type="text" class="form-control" name="validate-optional" id="validate-optional" placeholder="Optional">
						<span class="input-group-addon info"><span class="glyphicon glyphicon-asterisk"></span></span>
					</div>
				</div>
    			<div class="form-group">
        			<label for="validate-optional">Already Validated!</label>
    				<div class="input-group">
						<input type="text" class="form-control" name="validate-text" id="validate-text" placeholder="Validate Text" value="Validated!" required>
						<span class="input-group-addon danger"><span class="glyphicon glyphicon-remove"></span></span>
					</div>
				</div>
				<div class="form-group">
        			<label for="validate-email">Validate Email</label>
					<div class="input-group" data-validate="email">
						<input type="text" class="form-control" name="validate-email" id="validate-email" placeholder="Validate Email" required>
						<span class="input-group-addon danger"><span class="glyphicon glyphicon-remove"></span></span>
					</div>
				</div>
    			<div class="form-group">
        			<label for="validate-phone">Validate Phone</label>
					<div class="input-group" data-validate="phone">
						<input type="text" class="form-control" name="validate-phone" id="validate-phone" placeholder="(814) 555-1234" required>
						<span class="input-group-addon danger"><span class="glyphicon glyphicon-remove"></span></span>
					</div>
				</div>
        		<div class="form-group">
        			<label for="validate-length">Minimum Length</label>
					<div class="input-group" data-validate="length" data-length="5">
						<textarea type="text" class="form-control" name="validate-length" id="validate-length" placeholder="Validate Length" required></textarea>
						<span class="input-group-addon danger"><span class="glyphicon glyphicon-remove"></span></span>
					</div>
				</div>
                <div class="form-group">
            		<label for="validate-select">Validate Select</label>
					<div class="input-group">
                        <select class="form-control" name="validate-select" id="validate-select" placeholder="Validate Select" required>
                            <option value="">Select an item</option>
                            <option value="item_1">Item 1</option>
                            <option value="item_2">Item 2</option>
                            <option value="item_3">Item 3</option>
                        </select>
						<span class="input-group-addon danger"><span class="glyphicon glyphicon-remove"></span></span>
					</div>
				</div>
            	<div class="form-group">
        			<label for="validate-number">Validate Number</label>
					<div class="input-group" data-validate="number">
						<input type="text" class="form-control" name="validate-number" id="validate-number" placeholder="Validate Number" required>
						<span class="input-group-addon danger"><span class="glyphicon glyphicon-remove"></span></span>
					</div>
				</div>
                <button type="submit" class="btn btn-primary col-xs-12" disabled>Submit</button>
            </form>
        </div>
    </div>
</div-->


//SideMenuBar.css
.nav-side-menu {
  overflow: auto;
  font-family: verdana;
  font-size: 12px;
  font-weight: 200;
  background-color: #2e353d;
  //position: fixed;
  //top: 0px;
  //width: 300px;
  height: 100%;
  color: #e1ffff;
}
.nav-side-menu .brand {
  background-color: #23282e;
  line-height: 50px;
  display: block;
  text-align: center;
  font-size: 14px;
}
.nav-side-menu .toggle-btn {
  display: none;
}
.nav-side-menu ul,
.nav-side-menu li {
  list-style: none;
  padding: 0px;
  margin: 0px;
  line-height: 35px;
  cursor: pointer;
  /*    
    .collapsed{
       .arrow:before{
                 font-family: FontAwesome;
                 content: "\f053";
                 display: inline-block;
                 padding-left:10px;
                 padding-right: 10px;
                 vertical-align: middle;
                 float:right;
            }
     }
*/
}
.nav-side-menu ul :not(collapsed) .arrow:before,
.nav-side-menu li :not(collapsed) .arrow:before {
  font-family: FontAwesome;
  content: "\f078";
  display: inline-block;
  padding-left: 10px;
  padding-right: 10px;
  vertical-align: middle;
  float: right;
}
.nav-side-menu ul .active,
.nav-side-menu li .active {
  border-left: 3px solid #d19b3d;
  background-color: #4f5b69;
}
.nav-side-menu ul .sub-menu li.active,
.nav-side-menu li .sub-menu li.active {
  color: #d19b3d;
}
.nav-side-menu ul .sub-menu li.active a,
.nav-side-menu li .sub-menu li.active a {
  color: #d19b3d;
}
.nav-side-menu ul .sub-menu li,
.nav-side-menu li .sub-menu li {
  background-color: #181c20;
  border: none;
  line-height: 28px;
  border-bottom: 1px solid #23282e;
  margin-left: 0px;
}
.nav-side-menu ul .sub-menu li:hover,
.nav-side-menu li .sub-menu li:hover {
  background-color: #020203;
}
.nav-side-menu ul .sub-menu li:before,
.nav-side-menu li .sub-menu li:before {
  font-family: FontAwesome;
  content: "\f105";
  display: inline-block;
  padding-left: 10px;
  padding-right: 10px;
  vertical-align: middle;
}
.nav-side-menu li {
  padding-left: 0px;
  border-left: 3px solid #2e353d;
  border-bottom: 1px solid #23282e;
}
.nav-side-menu li a {
  text-decoration: none;
  color: #e1ffff;
}
.nav-side-menu li a i {
  padding-left: 10px;
  width: 20px;
  padding-right: 20px;
}
.nav-side-menu li:hover {
  border-left: 3px solid #d19b3d;
  background-color: #4f5b69;
  -webkit-transition: all 1s ease;
  -moz-transition: all 1s ease;
  -o-transition: all 1s ease;
  -ms-transition: all 1s ease;
  transition: all 1s ease;
}
@media (max-width: 990px) {
  .nav-side-menu {
    position: relative;
    width: 100%;
    margin-bottom: 10px;
  }
  .nav-side-menu .toggle-btn {
    display: block;
    cursor: pointer;
    position: absolute;
    right: 10px;
    top: 10px;
    z-index: 10 !important;
    padding: 3px;
    background-color: #ffffff;
    color: #000;
    width: 40px;
    text-align: center;
  }
  .brand {
    text-align: left !important;
    font-size: 22px;
    padding-left: 20px;
    line-height: 50px !important;
  }
}
@media (min-width: 990px) {
  .nav-side-menu .menu-list .menu-content {
    display: block;
  }
}
body {
  margin: 0px;
  padding: 0px;
}



